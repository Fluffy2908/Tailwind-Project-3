/*! tailwindcss v4.0.17 | MIT License | https://tailwindcss.com */
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: Barlow Condensed, sans-serif;
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-gray-200: oklch(0.928 0.006 264.531);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --breakpoint-2xl: 96rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-black: 900;
    --radius-sm: 0.25rem;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --blur-sm: 8px;
    --blur-md: 12px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-blue: rgb(10 33 78);
    --color-golden: rgb(204 153 0);
    --color-slate: rgb(45 45 45);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-5 {
    top: calc(var(--spacing) * 5);
  }
  .right-4 {
    right: calc(var(--spacing) * 4);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .z-1 {
    z-index: 1;
  }
  .z-50 {
    z-index: 50;
  }
  .z-\[1\] {
    z-index: 1;
  }
  .col-start-1 {
    grid-column-start: 1;
  }
  .col-end-2 {
    grid-column-end: 2;
  }
  .row-start-1 {
    grid-row-start: 1;
  }
  .row-end-3 {
    grid-row-end: 3;
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .table {
    display: table;
  }
  .size-full {
    width: 100%;
    height: 100%;
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-20 {
    height: calc(var(--spacing) * 20);
  }
  .h-\[2px\] {
    height: 2px;
  }
  .h-screen {
    height: 100vh;
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .w-40 {
    width: calc(var(--spacing) * 40);
  }
  .w-full {
    width: 100%;
  }
  .w-screen {
    width: 100vw;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .origin-bottom {
    transform-origin: bottom;
  }
  .scale-120 {
    --tw-scale-x: 120%;
    --tw-scale-y: 120%;
    --tw-scale-z: 120%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-180 {
    --tw-scale-x: 180%;
    --tw-scale-y: 180%;
    --tw-scale-z: 180%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-y-0 {
    --tw-scale-y: 0%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .grid-cols-\[1fr\] {
    grid-template-columns: 1fr;
  }
  .grid-cols-\[min-content\,1fr\] {
    grid-template-columns: min-content,1fr;
  }
  .grid-cols-\[min-content_1fr\] {
    grid-template-columns: min-content 1fr;
  }
  .grid-rows-2 {
    grid-template-rows: repeat(2, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-5 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 5) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 5) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-6 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-8 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .gap-x-2 {
    column-gap: calc(var(--spacing) * 2);
  }
  .space-x-1 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .gap-y-1 {
    row-gap: calc(var(--spacing) * 1);
  }
  .gap-y-1\.5 {
    row-gap: calc(var(--spacing) * 1.5);
  }
  .gap-y-4 {
    row-gap: calc(var(--spacing) * 4);
  }
  .gap-y-5 {
    row-gap: calc(var(--spacing) * 5);
  }
  .gap-y-6 {
    row-gap: calc(var(--spacing) * 6);
  }
  .gap-y-10 {
    row-gap: calc(var(--spacing) * 10);
  }
  .divide-y {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
  }
  .divide-golden {
    :where(& > :not(:last-child)) {
      border-color: var(--color-golden);
    }
  }
  .self-center {
    align-self: center;
  }
  .self-start {
    align-self: flex-start;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .border-dotted {
    --tw-border-style: dotted;
    border-style: dotted;
  }
  .border-blue {
    border-color: var(--color-blue);
  }
  .border-golden {
    border-color: var(--color-golden);
  }
  .border-white {
    border-color: var(--color-white);
  }
  .bg-blue {
    background-color: var(--color-blue);
  }
  .bg-golden {
    background-color: var(--color-golden);
  }
  .bg-golden\/60 {
    background-color: color-mix(in oklab, var(--color-golden) 60%, transparent);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .pt-1 {
    padding-top: calc(var(--spacing) * 1);
  }
  .pt-1\.5 {
    padding-top: calc(var(--spacing) * 1.5);
  }
  .pr-6 {
    padding-right: calc(var(--spacing) * 6);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }
  .text-center {
    text-align: center;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-\[8px\] {
    font-size: 8px;
  }
  .font-black {
    --tw-font-weight: var(--font-weight-black);
    font-weight: var(--font-weight-black);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-blue {
    color: var(--color-blue);
  }
  .text-golden {
    color: var(--color-golden);
  }
  .text-slate {
    color: var(--color-slate);
  }
  .text-white {
    color: var(--color-white);
  }
  .uppercase {
    text-transform: uppercase;
  }
  .underline {
    text-decoration-line: underline;
  }
  .decoration-golden {
    text-decoration-color: var(--color-golden);
  }
  .decoration-2 {
    text-decoration-thickness: 2px;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-filter {
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .\*\:flex {
    :is(& > *) {
      display: flex;
    }
  }
  .\*\:size-1 {
    :is(& > *) {
      width: calc(var(--spacing) * 1);
      height: calc(var(--spacing) * 1);
    }
  }
  .\*\:size-2 {
    :is(& > *) {
      width: calc(var(--spacing) * 2);
      height: calc(var(--spacing) * 2);
    }
  }
  .\*\:size-4 {
    :is(& > *) {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
    }
  }
  .\*\:size-6 {
    :is(& > *) {
      width: calc(var(--spacing) * 6);
      height: calc(var(--spacing) * 6);
    }
  }
  .\*\:translate-x-1 {
    :is(& > *) {
      --tw-translate-x: calc(var(--spacing) * 1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .\*\:translate-x-2 {
    :is(& > *) {
      --tw-translate-x: calc(var(--spacing) * 2);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .\*\:-translate-y-1 {
    :is(& > *) {
      --tw-translate-y: calc(var(--spacing) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .\*\:translate-y-2 {
    :is(& > *) {
      --tw-translate-y: calc(var(--spacing) * 2);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .\*\:cursor-pointer {
    :is(& > *) {
      cursor: pointer;
    }
  }
  .\*\:items-center {
    :is(& > *) {
      align-items: center;
    }
  }
  .\*\:justify-between {
    :is(& > *) {
      justify-content: space-between;
    }
  }
  .\*\:justify-center {
    :is(& > *) {
      justify-content: center;
    }
  }
  .\*\:space-y-2 {
    :is(& > *) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .\*\:gap-x-2 {
    :is(& > *) {
      column-gap: calc(var(--spacing) * 2);
    }
  }
  .\*\:border {
    :is(& > *) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .\*\:border-2 {
    :is(& > *) {
      border-style: var(--tw-border-style);
      border-width: 2px;
    }
  }
  .\*\:border-golden {
    :is(& > *) {
      border-color: var(--color-golden);
    }
  }
  .\*\:border-white\/60 {
    :is(& > *) {
      border-color: color-mix(in oklab, var(--color-white) 60%, transparent);
    }
  }
  .\*\:bg-slate\/60 {
    :is(& > *) {
      background-color: color-mix(in oklab, var(--color-slate) 60%, transparent);
    }
  }
  .\*\:p-2 {
    :is(& > *) {
      padding: calc(var(--spacing) * 2);
    }
  }
  .\*\:p-4 {
    :is(& > *) {
      padding: calc(var(--spacing) * 4);
    }
  }
  .\*\:p-6 {
    :is(& > *) {
      padding: calc(var(--spacing) * 6);
    }
  }
  .\*\:text-center {
    :is(& > *) {
      text-align: center;
    }
  }
  .\*\:text-xs {
    :is(& > *) {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
  }
  .\*\:text-golden {
    :is(& > *) {
      color: var(--color-golden);
    }
  }
  .\*\:backdrop-blur-md {
    :is(& > *) {
      --tw-backdrop-blur: blur(var(--blur-md));
      -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
      backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    }
  }
  .\*\:transition-colors {
    :is(& > *) {
      transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .group-hover\:translate-x-1 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .selection\:bg-blue {
    & *::selection {
      background-color: var(--color-blue);
    }
    &::selection {
      background-color: var(--color-blue);
    }
  }
  .selection\:text-golden {
    & *::selection {
      color: var(--color-golden);
    }
    &::selection {
      color: var(--color-golden);
    }
  }
  .placeholder\:text-white\/60 {
    &::placeholder {
      color: color-mix(in oklab, var(--color-white) 60%, transparent);
    }
  }
  .before\:-right-6 {
    &::before {
      content: var(--tw-content);
      right: calc(var(--spacing) * -6);
    }
  }
  .before\:bottom-2\/4 {
    &::before {
      content: var(--tw-content);
      bottom: calc(2/4 * 100%);
    }
  }
  .before\:h-2 {
    &::before {
      content: var(--tw-content);
      height: calc(var(--spacing) * 2);
    }
  }
  .before\:w-3 {
    &::before {
      content: var(--tw-content);
      width: calc(var(--spacing) * 3);
    }
  }
  .before\:rounded {
    &::before {
      content: var(--tw-content);
      border-radius: 0.25rem;
    }
  }
  .before\:bg-blue {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-blue);
    }
  }
  .before\:opacity-0 {
    &::before {
      content: var(--tw-content);
      opacity: 0%;
    }
  }
  .before\:transition {
    &::before {
      content: var(--tw-content);
      transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .after\:-right-6 {
    &::after {
      content: var(--tw-content);
      right: calc(var(--spacing) * -6);
    }
  }
  .after\:bottom-0\.5 {
    &::after {
      content: var(--tw-content);
      bottom: calc(var(--spacing) * 0.5);
    }
  }
  .after\:bottom-1\/4 {
    &::after {
      content: var(--tw-content);
      bottom: calc(1/4 * 100%);
    }
  }
  .after\:bottom-2\.5 {
    &::after {
      content: var(--tw-content);
      bottom: calc(var(--spacing) * 2.5);
    }
  }
  .after\:left-0 {
    &::after {
      content: var(--tw-content);
      left: calc(var(--spacing) * 0);
    }
  }
  .after\:left-2\/4 {
    &::after {
      content: var(--tw-content);
      left: calc(2/4 * 100%);
    }
  }
  .after\:-z-1 {
    &::after {
      content: var(--tw-content);
      z-index: calc(1 * -1);
    }
  }
  .after\:-z-\[1\] {
    &::after {
      content: var(--tw-content);
      z-index: calc(1 * -1);
    }
  }
  .after\:h-2 {
    &::after {
      content: var(--tw-content);
      height: calc(var(--spacing) * 2);
    }
  }
  .after\:h-3 {
    &::after {
      content: var(--tw-content);
      height: calc(var(--spacing) * 3);
    }
  }
  .after\:h-\[2px\] {
    &::after {
      content: var(--tw-content);
      height: 2px;
    }
  }
  .after\:w-1\/3 {
    &::after {
      content: var(--tw-content);
      width: calc(1/3 * 100%);
    }
  }
  .after\:w-1\/4 {
    &::after {
      content: var(--tw-content);
      width: calc(1/4 * 100%);
    }
  }
  .after\:w-3 {
    &::after {
      content: var(--tw-content);
      width: calc(var(--spacing) * 3);
    }
  }
  .after\:w-3\/4 {
    &::after {
      content: var(--tw-content);
      width: calc(3/4 * 100%);
    }
  }
  .after\:w-4\/5 {
    &::after {
      content: var(--tw-content);
      width: calc(4/5 * 100%);
    }
  }
  .after\:w-full {
    &::after {
      content: var(--tw-content);
      width: 100%;
    }
  }
  .after\:-translate-x-2\/4 {
    &::after {
      content: var(--tw-content);
      --tw-translate-x: calc(calc(2/4 * 100%) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .after\:-rotate-45 {
    &::after {
      content: var(--tw-content);
      rotate: calc(45deg * -1);
    }
  }
  .after\:animate-spin {
    &::after {
      content: var(--tw-content);
      animation: var(--animate-spin);
    }
  }
  .after\:rounded {
    &::after {
      content: var(--tw-content);
      border-radius: 0.25rem;
    }
  }
  .after\:rounded-sm {
    &::after {
      content: var(--tw-content);
      border-radius: var(--radius-sm);
    }
  }
  .after\:bg-blue {
    &::after {
      content: var(--tw-content);
      background-color: var(--color-blue);
    }
  }
  .after\:bg-golden {
    &::after {
      content: var(--tw-content);
      background-color: var(--color-golden);
    }
  }
  .after\:bg-golden\/60 {
    &::after {
      content: var(--tw-content);
      background-color: color-mix(in oklab, var(--color-golden) 60%, transparent);
    }
  }
  .after\:opacity-0 {
    &::after {
      content: var(--tw-content);
      opacity: 0%;
    }
  }
  .after\:blur-sm {
    &::after {
      content: var(--tw-content);
      --tw-blur: blur(var(--blur-sm));
      filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    }
  }
  .after\:transition {
    &::after {
      content: var(--tw-content);
      transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .hover\:scale-105 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-110 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 110%;
        --tw-scale-y: 110%;
        --tw-scale-z: 110%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-120 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 120%;
        --tw-scale-y: 120%;
        --tw-scale-z: 120%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:border-blue {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-blue);
      }
    }
  }
  .hover\:border-golden {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-golden);
      }
    }
  }
  .hover\:bg-blue {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue);
      }
    }
  }
  .hover\:bg-golden {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-golden);
      }
    }
  }
  .hover\:bg-golden\/60 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in oklab, var(--color-golden) 60%, transparent);
      }
    }
  }
  .hover\:text-black {
    &:hover {
      @media (hover: hover) {
        color: var(--color-black);
      }
    }
  }
  .hover\:text-blue {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue);
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .\*\:hover\:scale-120 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 120%;
          --tw-scale-y: 120%;
          --tw-scale-z: 120%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .\*\:hover\:scale-150 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 150%;
          --tw-scale-y: 150%;
          --tw-scale-z: 150%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .\*\:hover\:scale-170 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 170%;
          --tw-scale-y: 170%;
          --tw-scale-z: 170%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .\*\:hover\:scale-190 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 190%;
          --tw-scale-y: 190%;
          --tw-scale-z: 190%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .\*\:hover\:scale-217 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 217%;
          --tw-scale-y: 217%;
          --tw-scale-z: 217%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .\*\:hover\:scale-219 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 219%;
          --tw-scale-y: 219%;
          --tw-scale-z: 219%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .\*\:hover\:scale-240 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 240%;
          --tw-scale-y: 240%;
          --tw-scale-z: 240%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .\*\:hover\:bg-golden\/60 {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in oklab, var(--color-golden) 60%, transparent);
        }
      }
    }
  }
  .hover\:\*\:bg-golden\/60 {
    &:hover {
      @media (hover: hover) {
        :is(& > *) {
          background-color: color-mix(in oklab, var(--color-golden) 60%, transparent);
        }
      }
    }
  }
  .\*\:hover\:text-golden {
    :is(& > *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-golden);
        }
      }
    }
  }
  .hover\:\*\:text-golden {
    &:hover {
      @media (hover: hover) {
        :is(& > *) {
          color: var(--color-golden);
        }
      }
    }
  }
  .hover\:before\:opacity-100 {
    &:hover {
      @media (hover: hover) {
        &::before {
          content: var(--tw-content);
          opacity: 100%;
        }
      }
    }
  }
  .hover\:after\:opacity-100 {
    &:hover {
      @media (hover: hover) {
        &::after {
          content: var(--tw-content);
          opacity: 100%;
        }
      }
    }
  }
  .sm\:static {
    @media (width >= 40rem) {
      position: static;
    }
  }
  .sm\:col-span-2 {
    @media (width >= 40rem) {
      grid-column: span 2 / span 2;
    }
  }
  .sm\:col-start-1 {
    @media (width >= 40rem) {
      grid-column-start: 1;
    }
  }
  .sm\:col-start-2 {
    @media (width >= 40rem) {
      grid-column-start: 2;
    }
  }
  .sm\:col-start-3 {
    @media (width >= 40rem) {
      grid-column-start: 3;
    }
  }
  .sm\:col-end-2 {
    @media (width >= 40rem) {
      grid-column-end: 2;
    }
  }
  .sm\:col-end-3 {
    @media (width >= 40rem) {
      grid-column-end: 3;
    }
  }
  .sm\:col-end-4 {
    @media (width >= 40rem) {
      grid-column-end: 4;
    }
  }
  .sm\:row-start-1 {
    @media (width >= 40rem) {
      grid-row-start: 1;
    }
  }
  .sm\:row-start-3 {
    @media (width >= 40rem) {
      grid-row-start: 3;
    }
  }
  .sm\:row-start-5 {
    @media (width >= 40rem) {
      grid-row-start: 5;
    }
  }
  .sm\:row-start-7 {
    @media (width >= 40rem) {
      grid-row-start: 7;
    }
  }
  .sm\:row-end-3 {
    @media (width >= 40rem) {
      grid-row-end: 3;
    }
  }
  .sm\:row-end-5 {
    @media (width >= 40rem) {
      grid-row-end: 5;
    }
  }
  .sm\:row-end-7 {
    @media (width >= 40rem) {
      grid-row-end: 7;
    }
  }
  .sm\:row-end-9 {
    @media (width >= 40rem) {
      grid-row-end: 9;
    }
  }
  .sm\:hidden {
    @media (width >= 40rem) {
      display: none;
    }
  }
  .sm\:h-auto {
    @media (width >= 40rem) {
      height: auto;
    }
  }
  .sm\:w-auto {
    @media (width >= 40rem) {
      width: auto;
    }
  }
  .sm\:grow {
    @media (width >= 40rem) {
      flex-grow: 1;
    }
  }
  .sm\:scale-y-100 {
    @media (width >= 40rem) {
      --tw-scale-y: 100%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .sm\:grid-cols-2 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .sm\:grid-cols-3 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .sm\:grid-rows-\[min-content_1fr\] {
    @media (width >= 40rem) {
      grid-template-rows: min-content 1fr;
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\:flex-row-reverse {
    @media (width >= 40rem) {
      flex-direction: row-reverse;
    }
  }
  .sm\:items-center {
    @media (width >= 40rem) {
      align-items: center;
    }
  }
  .sm\:gap-8 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 8);
    }
  }
  .sm\:gap-10 {
    @media (width >= 40rem) {
      gap: calc(var(--spacing) * 10);
    }
  }
  .sm\:place-self-center {
    @media (width >= 40rem) {
      place-self: center;
    }
  }
  .sm\:bg-transparent {
    @media (width >= 40rem) {
      background-color: transparent;
    }
  }
  .sm\:p-8 {
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 8);
    }
  }
  .sm\:px-6 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .sm\:py-8 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 8);
    }
  }
  .sm\:text-2xl {
    @media (width >= 40rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .sm\:text-4xl {
    @media (width >= 40rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .sm\:font-medium {
    @media (width >= 40rem) {
      --tw-font-weight: var(--font-weight-medium);
      font-weight: var(--font-weight-medium);
    }
  }
  .sm\:font-semibold {
    @media (width >= 40rem) {
      --tw-font-weight: var(--font-weight-semibold);
      font-weight: var(--font-weight-semibold);
    }
  }
  .\*\:sm\:px-6 {
    :is(& > *) {
      @media (width >= 40rem) {
        padding-inline: calc(var(--spacing) * 6);
      }
    }
  }
  .sm\:\*\:px-6 {
    @media (width >= 40rem) {
      :is(& > *) {
        padding-inline: calc(var(--spacing) * 6);
      }
    }
  }
  .sm\:before\:-bottom-2 {
    @media (width >= 40rem) {
      &::before {
        content: var(--tw-content);
        bottom: calc(var(--spacing) * -2);
      }
    }
  }
  .sm\:before\:left-0 {
    @media (width >= 40rem) {
      &::before {
        content: var(--tw-content);
        left: calc(var(--spacing) * 0);
      }
    }
  }
  .sm\:before\:bg-golden {
    @media (width >= 40rem) {
      &::before {
        content: var(--tw-content);
        background-color: var(--color-golden);
      }
    }
  }
  .sm\:after\:right-0 {
    @media (width >= 40rem) {
      &::after {
        content: var(--tw-content);
        right: calc(var(--spacing) * 0);
      }
    }
  }
  .sm\:after\:-bottom-2 {
    @media (width >= 40rem) {
      &::after {
        content: var(--tw-content);
        bottom: calc(var(--spacing) * -2);
      }
    }
  }
  .sm\:after\:bg-golden {
    @media (width >= 40rem) {
      &::after {
        content: var(--tw-content);
        background-color: var(--color-golden);
      }
    }
  }
  .sm\:hover\:scale-110 {
    @media (width >= 40rem) {
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 110%;
          --tw-scale-y: 110%;
          --tw-scale-z: 110%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .sm\:hover\:border-blue {
    @media (width >= 40rem) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-blue);
        }
      }
    }
  }
  .sm\:hover\:border-golden {
    @media (width >= 40rem) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-golden);
        }
      }
    }
  }
  .sm\:hover\:border-white {
    @media (width >= 40rem) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-white);
        }
      }
    }
  }
  .sm\:hover\:bg-blue {
    @media (width >= 40rem) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-blue);
        }
      }
    }
  }
  .sm\:hover\:bg-golden {
    @media (width >= 40rem) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-golden);
        }
      }
    }
  }
  .sm\:hover\:text-black {
    @media (width >= 40rem) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-black);
        }
      }
    }
  }
  .sm\:hover\:text-golden {
    @media (width >= 40rem) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-golden);
        }
      }
    }
  }
  .sm\:hover\:text-white {
    @media (width >= 40rem) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-white);
        }
      }
    }
  }
  .md\:relative {
    @media (width >= 48rem) {
      position: relative;
    }
  }
  .md\:col-auto {
    @media (width >= 48rem) {
      grid-column: auto;
    }
  }
  .md\:mt-5 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 5);
    }
  }
  .md\:basis-2\/4 {
    @media (width >= 48rem) {
      flex-basis: calc(2/4 * 100%);
    }
  }
  .md\:grid-cols-3 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .md\:items-center {
    @media (width >= 48rem) {
      align-items: center;
    }
  }
  .md\:gap-x-3 {
    @media (width >= 48rem) {
      column-gap: calc(var(--spacing) * 3);
    }
  }
  .md\:gap-x-4 {
    @media (width >= 48rem) {
      column-gap: calc(var(--spacing) * 4);
    }
  }
  .md\:gap-x-6 {
    @media (width >= 48rem) {
      column-gap: calc(var(--spacing) * 6);
    }
  }
  .md\:gap-x-10 {
    @media (width >= 48rem) {
      column-gap: calc(var(--spacing) * 10);
    }
  }
  .md\:gap-x-14 {
    @media (width >= 48rem) {
      column-gap: calc(var(--spacing) * 14);
    }
  }
  .md\:self-center {
    @media (width >= 48rem) {
      align-self: center;
    }
  }
  .md\:border-2 {
    @media (width >= 48rem) {
      border-style: var(--tw-border-style);
      border-width: 2px;
    }
  }
  .md\:border-white {
    @media (width >= 48rem) {
      border-color: var(--color-white);
    }
  }
  .md\:p-12 {
    @media (width >= 48rem) {
      padding: calc(var(--spacing) * 12);
    }
  }
  .md\:px-1 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 1);
    }
  }
  .md\:px-6 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .md\:py-12 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 12);
    }
  }
  .md\:pt-2 {
    @media (width >= 48rem) {
      padding-top: calc(var(--spacing) * 2);
    }
  }
  .md\:text-2xl {
    @media (width >= 48rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .md\:text-7xl {
    @media (width >= 48rem) {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }
  .md\:text-base {
    @media (width >= 48rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .md\:text-lg {
    @media (width >= 48rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .md\:text-xl {
    @media (width >= 48rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .md\:font-medium {
    @media (width >= 48rem) {
      --tw-font-weight: var(--font-weight-medium);
      font-weight: var(--font-weight-medium);
    }
  }
  .md\:text-white {
    @media (width >= 48rem) {
      color: var(--color-white);
    }
  }
  .\*\:md\:scale-100 {
    :is(& > *) {
      @media (width >= 48rem) {
        --tw-scale-x: 100%;
        --tw-scale-y: 100%;
        --tw-scale-z: 100%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .\*\:md\:scale-130 {
    :is(& > *) {
      @media (width >= 48rem) {
        --tw-scale-x: 130%;
        --tw-scale-y: 130%;
        --tw-scale-z: 130%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .md\:\*\:scale-110 {
    @media (width >= 48rem) {
      :is(& > *) {
        --tw-scale-x: 110%;
        --tw-scale-y: 110%;
        --tw-scale-z: 110%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .md\:\*\:scale-130 {
    @media (width >= 48rem) {
      :is(& > *) {
        --tw-scale-x: 130%;
        --tw-scale-y: 130%;
        --tw-scale-z: 130%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .md\:\*\:scale-150 {
    @media (width >= 48rem) {
      :is(& > *) {
        --tw-scale-x: 150%;
        --tw-scale-y: 150%;
        --tw-scale-z: 150%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .md\:\*\:scale-153 {
    @media (width >= 48rem) {
      :is(& > *) {
        --tw-scale-x: 153%;
        --tw-scale-y: 153%;
        --tw-scale-z: 153%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .md\:\*\:scale-200 {
    @media (width >= 48rem) {
      :is(& > *) {
        --tw-scale-x: 200%;
        --tw-scale-y: 200%;
        --tw-scale-z: 200%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .\*\:md\:gap-x-4 {
    :is(& > *) {
      @media (width >= 48rem) {
        column-gap: calc(var(--spacing) * 4);
      }
    }
  }
  .\*\:md\:gap-x-6 {
    :is(& > *) {
      @media (width >= 48rem) {
        column-gap: calc(var(--spacing) * 6);
      }
    }
  }
  .md\:\*\:gap-x-4 {
    @media (width >= 48rem) {
      :is(& > *) {
        column-gap: calc(var(--spacing) * 4);
      }
    }
  }
  .md\:\*\:gap-x-6 {
    @media (width >= 48rem) {
      :is(& > *) {
        column-gap: calc(var(--spacing) * 6);
      }
    }
  }
  .md\:\*\:px-6 {
    @media (width >= 48rem) {
      :is(& > *) {
        padding-inline: calc(var(--spacing) * 6);
      }
    }
  }
  .md\:before\:-top-28 {
    @media (width >= 48rem) {
      &::before {
        content: var(--tw-content);
        top: calc(var(--spacing) * -28);
      }
    }
  }
  .md\:before\:left-2\/4 {
    @media (width >= 48rem) {
      &::before {
        content: var(--tw-content);
        left: calc(2/4 * 100%);
      }
    }
  }
  .md\:before\:size-96 {
    @media (width >= 48rem) {
      &::before {
        content: var(--tw-content);
        width: calc(var(--spacing) * 96);
        height: calc(var(--spacing) * 96);
      }
    }
  }
  .md\:before\:-translate-x-2\/4 {
    @media (width >= 48rem) {
      &::before {
        content: var(--tw-content);
        --tw-translate-x: calc(calc(2/4 * 100%) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .md\:before\:rounded-full {
    @media (width >= 48rem) {
      &::before {
        content: var(--tw-content);
        border-radius: calc(infinity * 1px);
      }
    }
  }
  .md\:before\:border-8 {
    @media (width >= 48rem) {
      &::before {
        content: var(--tw-content);
        border-style: var(--tw-border-style);
        border-width: 8px;
      }
    }
  }
  .md\:before\:border-golden\/50 {
    @media (width >= 48rem) {
      &::before {
        content: var(--tw-content);
        border-color: color-mix(in oklab, var(--color-golden) 50%, transparent);
      }
    }
  }
  .md\:before\:bg-blue\/50 {
    @media (width >= 48rem) {
      &::before {
        content: var(--tw-content);
        background-color: color-mix(in oklab, var(--color-blue) 50%, transparent);
      }
    }
  }
  .md\:before\:blur-sm {
    @media (width >= 48rem) {
      &::before {
        content: var(--tw-content);
        --tw-blur: blur(var(--blur-sm));
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .md\:hover\:scale-110 {
    @media (width >= 48rem) {
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 110%;
          --tw-scale-y: 110%;
          --tw-scale-z: 110%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .md\:hover\:scale-130 {
    @media (width >= 48rem) {
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 130%;
          --tw-scale-y: 130%;
          --tw-scale-z: 130%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .md\:hover\:border-blue {
    @media (width >= 48rem) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-blue);
        }
      }
    }
  }
  .md\:hover\:border-golden {
    @media (width >= 48rem) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-golden);
        }
      }
    }
  }
  .md\:hover\:bg-blue {
    @media (width >= 48rem) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-blue);
        }
      }
    }
  }
  .md\:hover\:text-black {
    @media (width >= 48rem) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-black);
        }
      }
    }
  }
  .md\:hover\:text-golden {
    @media (width >= 48rem) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-golden);
        }
      }
    }
  }
  .md\:hover\:text-white {
    @media (width >= 48rem) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-white);
        }
      }
    }
  }
  .lg\:mx-auto {
    @media (width >= 64rem) {
      margin-inline: auto;
    }
  }
  .lg\:w-2\/4 {
    @media (width >= 64rem) {
      width: calc(2/4 * 100%);
    }
  }
  .lg\:grid-cols-3 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-4 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .lg\:gap-x-5 {
    @media (width >= 64rem) {
      column-gap: calc(var(--spacing) * 5);
    }
  }
  .lg\:gap-x-6 {
    @media (width >= 64rem) {
      column-gap: calc(var(--spacing) * 6);
    }
  }
  .lg\:gap-x-10 {
    @media (width >= 64rem) {
      column-gap: calc(var(--spacing) * 10);
    }
  }
  .lg\:border-4 {
    @media (width >= 64rem) {
      border-style: var(--tw-border-style);
      border-width: 4px;
    }
  }
  .lg\:border-dashed {
    @media (width >= 64rem) {
      --tw-border-style: dashed;
      border-style: dashed;
    }
  }
  .lg\:border-white {
    @media (width >= 64rem) {
      border-color: var(--color-white);
    }
  }
  .lg\:p-8 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 8);
    }
  }
  .lg\:p-16 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 16);
    }
  }
  .lg\:py-16 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 16);
    }
  }
  .lg\:text-2xl {
    @media (width >= 64rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .lg\:\*\:size-10 {
    @media (width >= 64rem) {
      :is(& > *) {
        width: calc(var(--spacing) * 10);
        height: calc(var(--spacing) * 10);
      }
    }
  }
  .\*\:lg\:scale-130 {
    :is(& > *) {
      @media (width >= 64rem) {
        --tw-scale-x: 130%;
        --tw-scale-y: 130%;
        --tw-scale-z: 130%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .\*\:lg\:scale-150 {
    :is(& > *) {
      @media (width >= 64rem) {
        --tw-scale-x: 150%;
        --tw-scale-y: 150%;
        --tw-scale-z: 150%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .lg\:\*\:scale-100 {
    @media (width >= 64rem) {
      :is(& > *) {
        --tw-scale-x: 100%;
        --tw-scale-y: 100%;
        --tw-scale-z: 100%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .lg\:\*\:scale-130 {
    @media (width >= 64rem) {
      :is(& > *) {
        --tw-scale-x: 130%;
        --tw-scale-y: 130%;
        --tw-scale-z: 130%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .lg\:\*\:scale-150 {
    @media (width >= 64rem) {
      :is(& > *) {
        --tw-scale-x: 150%;
        --tw-scale-y: 150%;
        --tw-scale-z: 150%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .lg\:\*\:scale-200 {
    @media (width >= 64rem) {
      :is(& > *) {
        --tw-scale-x: 200%;
        --tw-scale-y: 200%;
        --tw-scale-z: 200%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .lg\:\*\:gap-x-5 {
    @media (width >= 64rem) {
      :is(& > *) {
        column-gap: calc(var(--spacing) * 5);
      }
    }
  }
  .lg\:\*\:p-4 {
    @media (width >= 64rem) {
      :is(& > *) {
        padding: calc(var(--spacing) * 4);
      }
    }
  }
  .lg\:\*\:p-8 {
    @media (width >= 64rem) {
      :is(& > *) {
        padding: calc(var(--spacing) * 8);
      }
    }
  }
  .lg\:\*\:text-2xl {
    @media (width >= 64rem) {
      :is(& > *) {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height));
      }
    }
  }
  .xl\:text-2xl {
    @media (width >= 80rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .\32 xl\:mx-auto {
    @media (width >= 96rem) {
      margin-inline: auto;
    }
  }
  .\32 xl\:max-w-screen-2xl {
    @media (width >= 96rem) {
      max-width: var(--breakpoint-2xl);
    }
  }
  .\32 xl\:grid-cols-4 {
    @media (width >= 96rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .\32 xl\:bg-blue {
    @media (width >= 96rem) {
      background-color: var(--color-blue);
    }
  }
  .\*\:2xl\:translate-x-2 {
    :is(& > *) {
      @media (width >= 96rem) {
        --tw-translate-x: calc(var(--spacing) * 2);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .\*\:2xl\:-translate-y-2 {
    :is(& > *) {
      @media (width >= 96rem) {
        --tw-translate-y: calc(var(--spacing) * -2);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .\*\:2xl\:scale-170 {
    :is(& > *) {
      @media (width >= 96rem) {
        --tw-scale-x: 170%;
        --tw-scale-y: 170%;
        --tw-scale-z: 170%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
}
@layer utilities {
  .before\:spinRev::before {
    animation: spinRev 1s linear infinite;
  }
}
@keyframes spinRev {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(-360deg);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
  img {
    object-fit: cover;
  }
}
@layer components {
  .before {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
    &::before {
      content: var(--tw-content);
      --tw-content: '';
      content: var(--tw-content);
    }
  }
  .after {
    &::after {
      content: var(--tw-content);
      position: absolute;
    }
    &::after {
      content: var(--tw-content);
      --tw-content: '';
      content: var(--tw-content);
    }
  }
  .nav {
    transform-origin: bottom;
    --tw-scale-y: 0%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .nav.open {
    transform-origin: top;
    --tw-scale-y: 100%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .hamburger.close {
    div:first-child {
      --tw-translate-y: calc(var(--spacing) * 2);
      translate: var(--tw-translate-x) var(--tw-translate-y);
      rotate: 45deg;
    }
    div:nth-child(2) {
      opacity: 0%;
    }
    div:last-child {
      --tw-translate-y: calc(var(--spacing) * -2);
      translate: var(--tw-translate-x) var(--tw-translate-y);
      rotate: calc(45deg * -1);
    }
  }
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
